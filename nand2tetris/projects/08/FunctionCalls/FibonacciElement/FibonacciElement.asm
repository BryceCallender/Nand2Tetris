@256
D=A
@SP
M=D
//call Sys.init 0
@Sys.init$ret.0
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@R13
M=D
@0
D=A
@R13
M=M-D
@5
D=A
@R13
MD=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Sys.init
@Sys.init
0;JMP
//label Sys.init$ret.0
(Sys.init$ret.0)
//function Main.fibonacci 0
(Main.fibonacci)
//push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
D=M
@R13
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//lt
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D-M
@Less0
D;JNE
@SP
A=M
M=0
@EndLess0
0;JMP
(Less0)
@SP
A=M
M=-1
(EndLess0)
@SP
AM=M+1
A=A-1
@SP
AM=M-1
D=M
@IF_TRUE
D;JGT
//goto IF_FALSE
@IF_FALSE
0;JMP
//label IF_TRUE
(IF_TRUE)
//push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
D=M
@R13
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
//return
@SP
AM=M-1
@SP
A=M
D=M
@R13
M=D
@SP
AM=M+1
A=A-1
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M-D
D=M
@R15
M=D
@SP
AM=M-1
@SP
D=M
@ARG
A=M
M=D
@R13
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
A=M-1
D=M
@THAT
M=D
@2
D=A
@R14
A=M-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
//label IF_FALSE
(IF_FALSE)
//push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
D=M
@R13
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 2
@2
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
M=D
@SP
AM=M+1
A=A-1
//call Main.fibonacci 1
@Main.fibonacci$ret.1
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@R13
M=D
@1
D=A
@R13
M=M-D
@5
D=A
@R13
MD=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Main.fibonacci
@Main.fibonacci
0;JMP
//label Main.fibonacci$ret.1
(Main.fibonacci$ret.1)
//push argument 0
@ARG
D=M
@0
D=D+A
@R13
M=D
D=M
@R13
A=M
D=M
@SP
AM=M+1
A=A-1
M=D
//push constant 1
@1
D=A
@SP
AM=M+1
A=A-1
M=D
//sub
@SP
AM=M-1
D=M
@SP
AM=M-1
D=M-D
M=D
@SP
AM=M+1
A=A-1
//call Main.fibonacci 1
@Main.fibonacci$ret.2
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@R13
M=D
@1
D=A
@R13
M=M-D
@5
D=A
@R13
MD=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Main.fibonacci
@Main.fibonacci
0;JMP
//label Main.fibonacci$ret.2
(Main.fibonacci$ret.2)
//add
@SP
AM=M-1
D=M
@SP
AM=M-1
D=D+M
M=D
@SP
AM=M+1
A=A-1
//return
@SP
AM=M-1
@SP
A=M
D=M
@R13
M=D
@SP
AM=M+1
A=A-1
@LCL
D=M
@R14
M=D
@5
D=A
@R14
A=M-D
D=M
@R15
M=D
@SP
AM=M-1
@SP
D=M
@ARG
A=M
M=D
@R13
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R14
A=M-1
D=M
@THAT
M=D
@2
D=A
@R14
A=M-D
D=M
@THIS
M=D
@3
D=A
@R14
A=M-D
D=M
@ARG
M=D
@4
D=A
@R14
A=M-D
D=M
@LCL
M=D
@R15
A=M
0;JMP
//function Sys.init 0
(Sys.init)
//push constant 4
@4
D=A
@SP
AM=M+1
A=A-1
M=D
//call Main.fibonacci 1
@Main.fibonacci$ret.3
D=A
@SP
AM=M+1
A=A-1
M=D
@LCL
D=M
@SP
AM=M+1
A=A-1
M=D
@ARG
D=M
@SP
AM=M+1
A=A-1
M=D
@THIS
D=M
@SP
AM=M+1
A=A-1
M=D
@THAT
D=M
@SP
AM=M+1
A=A-1
M=D
@SP
D=M
@R13
M=D
@1
D=A
@R13
M=M-D
@5
D=A
@R13
MD=M-D
@ARG
M=D
@SP
D=M
@LCL
M=D
//goto Main.fibonacci
@Main.fibonacci
0;JMP
//label Main.fibonacci$ret.3
(Main.fibonacci$ret.3)
//label WHILE
(WHILE)
//goto WHILE
@WHILE
0;JMP
